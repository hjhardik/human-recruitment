{"version":3,"sources":["components/HeaderFooter/Header.js","components/HeaderFooter/Footer.js","config.js","components/SignIn/Register.js","components/SignIn/Login.js","ProtectedRoute.js","components/Elements/Button.js","components/Contracts/Contract.js","components/Contracts/ContractRow.js","components/Elements/TextEditor.js","components/Draft/CreateDraft.js","components/Draft/Dashboard.js","UserToken.js","components/Viewer/Viewer.js","components/Viewer/EditContract.js","components/Viewer/SignAuthorize.js","App.js","index.js"],"names":["Header","isAuth","setToken","history","useHistory","className","onClick","localStorage","clear","token","user","candidate","company","push","Footer","serverURL","registerUser","credentials","a","fetch","method","headers","body","JSON","stringify","then","data","json","Register","useState","errorMessage","setErrorMessage","userName","setUserName","fullName","setFullName","companyName","setCompanyName","password","setPassword","confirmPassword","setConfirmPassword","setCandidate","setCompany","onRoleChangeCan","onRoleChangeCom","onSubmit","e","preventDefault","success","msg","type","name","value","defaultChecked","placeholder","onChange","target","to","loginUser","Login","setuserName","ProtectedRoute","Component","rest","render","props","getItem","Button","class","btnType","style","backgroundColor","color","text","modifyStatus","creator","contract","status","Contract","content","id","onDelete","newContent","setNewContent","setStatus","useEffect","deleteContract","candidateName","contractName","approveContract","isCompany","disapproveContract","finalizeContract","signContract","window","open","console","log","toUpperCase","pathname","state","draftContent","_id","ContractRow","contracts","newContracts","setNewContracts","Fragment","map","idx","forwardRef","React","useImperativeHandle","TextEditor","ref","undefined","initialText","blocksFromHTML","convertFromHTML","ContentState","createFromBlockArray","contentBlocks","entityMap","EditorState","createWithContent","createEmpty","editorState","setEditorState","convertContentToHTML","currentContentAsHTML","convertToHTML","getCurrentContent","onEditorStateChange","wrapperClassName","editorClassName","toolbarClassName","useRef","fetchFunc","subRoute","sendData","CreateDraft","addContract","toggle","childRef","members","setMembers","setContractName","selectedMembers","setSelectedMembers","candidates","fetchMembers","submitHandler","length","current","res","member","memberName","isSelected","currentTarget","checked","filter","mem","htmlFor","cancelHandler","fetchContracts","Dashboard","setContracts","showCreateDraft","toggleShowCreateDraft","rendered","setRendered","contractsFromServer","getTasks","UserToken","getToken","setItem","Viewer","useParams","setDraftContent","findContent","setInterval","newDraft","localeCompare","firstScript","document","createElement","src","async","secondScript","appendChild","removeChild","EditContract","useLocation","editSubmit","editStatus","goBack","reorderDeleteSubmit","SP","getElementById","EP","min","max","SignAuthorize","showEmail","setShowEmail","email","setEmail","code","api_access_point","web_access_point","test","String","toLowerCase","App","exact","path","ReactDOM"],"mappings":"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","file":"static/js/main.80d7f563.chunk.js","sourcesContent":["import {useHistory} from \"react-router-dom\";\r\n\r\nconst Header = ({isAuth, setToken}) => {\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        localStorage.clear();\r\n        setToken({token: false, user: false, candidate:false, company:false })\r\n        history.push(\"/login\"); \r\n    }\r\n    return(\r\n        <div className=\"container header\">\r\n            <div className=\"header-center\">\r\n                Human Recruitment Signing Platform\r\n            </div>\r\n            {true && <button className=\"btn btn-light\" onClick={handleLogout}>Logout</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","const Footer = () => {\r\n    return(\r\n    <footer>\r\n        <hr/>\r\n      <p>Copyright &copy; 2021</p>\r\n      <p>Designed & developed by Hardik</p>\r\n    </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","export const serverURL = \"https://guarded-garden-69104.herokuapp.com\";","import {useState} from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {serverURL} from \"../../config\";\r\n\r\nasync function registerUser(credentials) {\r\n  return fetch(`${serverURL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n    .then(data => data.json())\r\n }\r\n\r\n\r\nconst Register = ({setToken}) => {\r\n  let history = useHistory();\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [userName, setUserName] = useState('')\r\n  const [fullName, setFullName] = useState('')\r\n  const [companyName, setCompanyName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [candidate, setCandidate] = useState(true)\r\n  const [company, setCompany] = useState(false)\r\n\r\n  const onRoleChangeCan = () => {\r\n    if (errorMessage){\r\n      setErrorMessage(null);\r\n    }\r\n    setCandidate(true)\r\n    setCompany(false)\r\n}   \r\n\r\n  const onRoleChangeCom = () => {\r\n    if (errorMessage){\r\n      setErrorMessage(null);\r\n    }\r\n    setCandidate(false)\r\n    setCompany(true)\r\n  } \r\n  \r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!userName || !password || !confirmPassword || !companyName) {\r\n      setErrorMessage('Please fill all fields')\r\n      return\r\n    }\r\n    if (! (password === confirmPassword)){\r\n      setErrorMessage('Password and confirm password do not match')\r\n      return\r\n    }\r\n    if(candidate && (fullName=== \"\")){\r\n      setErrorMessage('Enter full name')\r\n      return\r\n    }\r\n\r\n    const token = await registerUser({userName, fullName, password, companyName, candidate})\r\n    if(token.success){\r\n      setToken(token);\r\n      onRoleChangeCan();\r\n      onRoleChangeCom();\r\n      setUserName('');\r\n      setFullName('');\r\n      setPassword('');\r\n      setCompanyName('');\r\n      setConfirmPassword(''); \r\n      history.push(\"/dashboard\");\r\n    }else{\r\n      setErrorMessage(token.msg)\r\n    }\r\n  }\r\n\r\n    return(\r\n     <>\r\n     <br/>\r\n    { errorMessage && <h4 className=\"error\"> { errorMessage } </h4> } \r\n    <form className='add-form' onSubmit={(e)=> onSubmit(e)}>\r\n    <h3 className=\"login-header\">Register New Account</h3>\r\n    <br/>\r\n      <div className='form-control form-control-check'>\r\n        <label>You are a </label><br/>\r\n        <input type=\"radio\" name=\"role\" value=\"candidate\" defaultChecked={candidate} onClick={onRoleChangeCan} />\r\n        <label>  Candidate</label><br />\r\n        <input type=\"radio\" name=\"role\" value=\"company\" defaultChecked={company} onClick={onRoleChangeCom} />\r\n        <label>  Company</label><br />\r\n      </div>\r\n      {candidate ? \r\n      <div>\r\n      <div className='form-control'>\r\n        <label>Full Name</label><br/>\r\n        <input\r\n          type='text'\r\n          placeholder='Enter Name'\r\n          value={fullName}\r\n          onChange={(e) => {setFullName(e.target.value);if (errorMessage){\r\n      setErrorMessage(null);\r\n    };}}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>User Name</label><br/>\r\n        <input\r\n          type='text'\r\n          placeholder='Enter User Name'\r\n          value={userName}\r\n          onChange={(e) => {setUserName(e.target.value);if (errorMessage){\r\n      setErrorMessage(null);\r\n    }}}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Password</label><br/>\r\n        <input\r\n          type='password'\r\n          placeholder='Enter Password'\r\n          value={password}\r\n          onChange={(e) => {setPassword(e.target.value);if (errorMessage){\r\n      setErrorMessage(null);\r\n    }}}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Confirm Password</label><br/>\r\n        <input\r\n          type='password'\r\n          placeholder='Confirm Password'\r\n          value={confirmPassword}\r\n          onChange={(e) => {setConfirmPassword(e.target.value);if (errorMessage){\r\n      setErrorMessage(null);\r\n    }}}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Enter Company Name</label><br/>\r\n        <input\r\n          type='text'\r\n          placeholder='Enter Company Name'\r\n          value={companyName}\r\n          onChange={(e) => {setCompanyName(e.target.value);if (errorMessage){\r\n      setErrorMessage(null);\r\n    }}}\r\n        />\r\n      </div>\r\n      </div>\r\n      : \r\n      <div>\r\n      <div className='form-control'>\r\n        <label>Enter Company Name</label><br/>\r\n        <input\r\n          type='text'\r\n          placeholder='Enter Company Name'\r\n          value={companyName}\r\n          onChange={(e) => {setCompanyName(e.target.value);if (errorMessage){\r\n      setErrorMessage(null);\r\n    }}}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>User Name</label><br/>\r\n        <input\r\n          type='text'\r\n          placeholder='Enter User Name'\r\n          value={userName}\r\n          onChange={(e) => {setUserName(e.target.value);if (errorMessage){\r\n      setErrorMessage(null);\r\n    }}}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Password</label><br/>\r\n        <input\r\n          type='password'\r\n          placeholder='Enter Password'\r\n          value={password}\r\n          onChange={(e) => {setPassword(e.target.value);if (errorMessage){\r\n      setErrorMessage(null);\r\n    }}}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Confirm Password</label><br/>\r\n        <input\r\n          type='password'\r\n          placeholder='Confirm Password'\r\n          value={confirmPassword}\r\n          onChange={(e) => {setConfirmPassword(e.target.value);if (errorMessage){\r\n      setErrorMessage(null);\r\n    }}}\r\n        />\r\n      </div>\r\n      </div>} \r\n      \r\n        <br/>\r\n      <input type='submit' value='REGISTER' className='btn btn-block' />\r\n    </form>\r\n    <div>\r\n        <p>Already Registered ?</p>\r\n        <Link to='/login'>Login</Link>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Register","import {useState} from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {serverURL} from \"../../config\";\r\n\r\nasync function loginUser(credentials) {\r\n  return await fetch(`${serverURL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n    .then(data => data.json())\r\n}\r\n\r\nconst Login = ({setToken}) => {\r\n    let history = useHistory();\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const [userName, setuserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [candidate, setCandidate] = useState(true)\r\n    const [company, setCompany] = useState(false)\r\n\r\n  const onRoleChangeCan = (e) => {\r\n    if (errorMessage){\r\n      setErrorMessage(null)\r\n    }\r\n    setCandidate(true)\r\n    setCompany(false)\r\n}   \r\n\r\n  const onRoleChangeCom = (e) => {\r\n    if (errorMessage){\r\n      setErrorMessage(null)\r\n    }\r\n    setCandidate(false)\r\n    setCompany(true)\r\n  } \r\n  \r\n  const onSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!userName || !password) {\r\n      setErrorMessage(('Please fill out all fields'));\r\n        return\r\n    }\r\n\r\n    const token = await loginUser({\r\n           userName,\r\n           password,\r\n           candidate,\r\n    }); \r\n    if(token.success){\r\n      setToken(token);\r\n      setuserName('');\r\n      setPassword('');\r\n      setCandidate(true);\r\n      setCompany(false);\r\n      history.push(\"/dashboard\");\r\n    }else{\r\n      setErrorMessage(token.msg);\r\n    }     \r\n    \r\n  }\r\n    return(\r\n        <>\r\n        <br/>\r\n        { errorMessage && <h4 className=\"error\"> { errorMessage } </h4> }\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n        <h3 className=\"login-header\">Log In to your Account</h3>\r\n        <br/> \r\n          <div>\r\n          <div className='form-control'>\r\n            <label>User Name</label><br/>\r\n            <input\r\n              type='text'\r\n              placeholder='Enter User Name'\r\n              value={userName}\r\n              onChange={(e) => {setuserName(e.target.value);if (errorMessage){\r\n      setErrorMessage(null);\r\n    }}}\r\n            />\r\n          </div>\r\n          <div className='form-control'>\r\n            <label>Password</label><br/>\r\n            <input\r\n              type='password'\r\n              placeholder='Enter Password'\r\n              value={password}\r\n              onChange={(e) => {setPassword(e.target.value);if (errorMessage){\r\n      setErrorMessage(null);\r\n    }}}\r\n            />\r\n          </div>\r\n          <div className='form-control form-control-check'>\r\n            <label>You are a </label><br/>\r\n            <input type=\"radio\" name=\"role\" value=\"candidate\" defaultChecked={candidate} onClick={onRoleChangeCan} />\r\n            <label> Candidate</label><br />\r\n            <input type=\"radio\" name=\"role\" value=\"company\" defaultChecked={company} onClick={onRoleChangeCom} />\r\n            <label> Company</label><br />\r\n          </div>\r\n          </div>\r\n          <br/>\r\n          <input type='submit' value='LOG IN' className='btn btn-block' />\r\n        </form>\r\n        <div>\r\n          <p>New User ?</p>\r\n          <Link to='/register'>Register New User</Link>\r\n        </div>\r\n        </>\r\n        )\r\n}\r\n\r\nexport default Login","import {Route, useHistory} from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({isAuth, candidate, Component, ...rest}) => {\r\n    const history = useHistory();\r\n    return (\r\n        <div>\r\n            <Route \r\n            {...rest} \r\n            render={(props) => {\r\n                if (isAuth){\r\n                    if(candidate === false && localStorage.getItem(\"candidate\")===\"true\") history.push(\"/dashboard\")\r\n                    return <Component />\r\n                }else{\r\n                    history.push(\"/login\")\r\n                }\r\n            }}   \r\n            /> \r\n        </div>\r\n    )\r\n    }\r\n\r\nexport default ProtectedRoute\r\n","const Button = (props) => {\r\n        return(\r\n            <button className={props.class} type={props.btnType} style={{backgroundColor: props.color}} onClick={props.onClick}>{props.text}</button>\r\n        )\r\n};\r\n\r\nexport default Button;","import {useState, useEffect} from \"react\";\r\nimport Button from \"../Elements/Button\"\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {serverURL} from \"../../config\";\r\n\r\nconst modifyStatus = async (creator, candidate, contract, status) => {\r\n    return await fetch(`${serverURL}/modifystatus/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({creator, candidate, contract, status})\r\n      }).then((data)=> data.json())\r\n}\r\n\r\nconst Contract = ({content, id, onDelete}) => {\r\n    const history = useHistory();\r\n    const [newContent, setNewContent] = useState(content);\r\n    let [status, setStatus ] = useState(newContent.status);\r\n\r\n    useEffect(() => {\r\n        setNewContent(content)\r\n        setStatus(content.status)\r\n    }, [content,id]);\r\n\r\n    const editContract = (id) =>{\r\n        history.push({\r\n            pathname: `/editContract/${newContent.candidateName}/${newContent.contractName}`,\r\n            state: { data: newContent.draftContent }\r\n        })\r\n    }\r\n    const deleteContract = async (id) => {\r\n        let success = await modifyStatus(newContent.creator, newContent.candidateName, newContent.contractName, 10)\r\n        if(success.success) onDelete(id)\r\n    }\r\n    const approveContract = async(isCompany, id) => {\r\n        if(isCompany){\r\n            let success = await modifyStatus(newContent.creator, newContent.candidateName, newContent.contractName, 4)\r\n            if(success.success) setStatus(4);\r\n        }else{\r\n            let success = await modifyStatus(newContent.creator, newContent.candidateName, newContent.contractName, status+1)\r\n            if(success.success) setStatus(status+1);\r\n        }\r\n    }\r\n    const disapproveContract = async(isCompany, id) => {\r\n        if(isCompany){\r\n            let success = await modifyStatus(newContent.creator, newContent.candidateName, newContent.contractName, 2)        \r\n            if(success.success) setStatus(2);\r\n        }else{\r\n            let success = await modifyStatus(newContent.creator, newContent.candidateName, newContent.contractName, status-1)        \r\n            if(success.success) setStatus(status-1);\r\n        }\r\n        \r\n    }\r\n    const finalizeContract = async (id) => {\r\n        let success = await modifyStatus(newContent.creator, newContent.candidateName, newContent.contractName, 1)\r\n        if(success.success) setStatus(status+1);\r\n    }\r\n    const signContract = async(isCompany, id) => {\r\n        if(isCompany){\r\n            window.open(`/signcontract/${newContent.candidateName}/${newContent.contractName}`, \"_blank\");\r\n        }else{\r\n            console.log(\"Sign clicked by candidate\")\r\n        }\r\n        // let success = await modifyStatus(newContent.creator, newContent.candidateName, newContent.contractName, status+1)\r\n        // if(success.success) setStatus(status+1);\r\n    }\r\n    return (\r\n        <tr>\r\n            <td><Link to={`/viewcontract/${newContent.candidateName}/${newContent.contractName}`}>{newContent.contractName.toUpperCase()}</Link></td>\r\n            <td>{newContent.company}</td>\r\n            <td>{newContent.candidateName}</td>\r\n            <td>\r\n            <>\r\n            {status===0 && \"DRAFT\"}\r\n            {status===1 && \"FINALIZED\"}\r\n            {status===2 && \"APPROVED BY CANDIDATE\"}\r\n            {status===3 && \"APPROVED BY COMPANY\"}\r\n            {status===4 && \"APPROVED\"}\r\n            {status===5 && \"SIGNED\"}\r\n            </>\r\n            </td>       \r\n            <td>\r\n                <>\r\n                {localStorage.getItem('candidate')===\"false\" && status===0 && <Button class=\"tableButton btn btn-dark\" text=\"Edit\" onClick={()=>editContract(id)}/>}\r\n                {localStorage.getItem('candidate')===\"false\" && status===0 && <Button class=\"tableButton btn btn-primary\" text=\"Finalize\" onClick={()=> finalizeContract(id)}/>}\r\n                {localStorage.getItem('candidate')===\"true\" && status===1 && <Button class=\"tableButton btn btn-success\" text=\"APPROVE BY CANDIDATE\" onClick={()=> approveContract(false, id)}/>}\r\n                {localStorage.getItem('candidate')===\"false\" && status===1 && \"Waiting for candidate to approve. Check comments/annotations in contract viewer.\"}\r\n                {localStorage.getItem('candidate')===\"false\" && status===2 && <Button class=\"tableButton btn btn-success\" text=\"APPROVE BY COMPANY\" onClick={()=> approveContract(true, id)}/>}\r\n                {localStorage.getItem('candidate')===\"true\" && status===2 && \"Waiting for company to approve. Check comments/annotations in contract viewer.\"}\r\n                {(status >= 2 && status <= 4) && localStorage.getItem('candidate')===\"true\" && <Button class=\"tableButton btn btn-outline-danger\" text=\"CANCEL APPROVAL\" onClick={()=> disapproveContract(false, id) }/>}\r\n                {(status === 3 || status === 4) && localStorage.getItem('candidate')===\"false\" && <Button class=\"tableButton btn btn-outline-danger\" text=\"CANCEL APPROVAL\" onClick={()=> disapproveContract(true, id) }/>}\r\n                {localStorage.getItem('candidate')===\"true\" && status===4 && <Button class=\"tableButton btn btn-success\" text=\"SIGN\" onClick={()=> signContract(false, id)}/>} \r\n                {localStorage.getItem('candidate')===\"false\" && status===4 && <Button class=\"tableButton btn btn-success\" text=\"SIGN\" onClick={()=> signContract(true, id)}/>} \r\n                {localStorage.getItem('candidate')===\"false\" && status===0 && <Button class=\"tableButton btn btn-danger\" text=\"Delete\" onClick={()=> deleteContract(newContent._id) }/>}\r\n                {status===6 && <Button text=\"CONTRACT ESTABLISHED\" color=\"pink\" />}\r\n                </>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Contract","import Contract from \"./Contract\";\r\nimport React,{useState, useEffect} from \"react\";\r\n\r\nconst ContractRow = ({contracts, onDelete}) => {\r\n    const [newContracts, setNewContracts] = useState(contracts);\r\n    \r\n    useEffect(() => {\r\n        setNewContracts(contracts)\r\n    }, [contracts]);\r\n\r\n    return( \r\n        <React.Fragment >\r\n        { newContracts.map((contract, idx) => (\r\n                <Contract content={contract} key={idx} id={idx} onDelete={onDelete} />\r\n            ))\r\n        }\r\n        </React.Fragment>   \r\n    )\r\n}\r\n\r\nexport default ContractRow","import React, { useState} from 'react';\r\nimport { EditorState, ContentState, convertFromHTML } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport './TextEditor.css';\r\nimport { convertToHTML } from 'draft-convert';\r\nconst { forwardRef, useImperativeHandle } = React;\r\n\r\n\r\nconst TextEditor = forwardRef((props, ref) => {\r\n  const [editorState, setEditorState] = useState(\r\n    () => {\r\n      if(props.initialText !== undefined){\r\n        const blocksFromHTML = convertFromHTML(props.initialText);\r\n        const state = ContentState.createFromBlockArray(\r\n                        blocksFromHTML.contentBlocks,\r\n                        blocksFromHTML.entityMap,\r\n                      );\r\n        return EditorState.createWithContent(state)\r\n      }else{\r\n        EditorState.createEmpty()\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleEditorChange = (state) => {\r\n    setEditorState(state);\r\n  }\r\n\r\n  useImperativeHandle(ref, () => ({\r\n  async convertContentToHTML() {\r\n    let currentContentAsHTML = convertToHTML(editorState.getCurrentContent());\r\n    return(currentContentAsHTML);\r\n  }\r\n}))\r\n  \r\n  return (\r\n    <div className=\"TextEditor\">\r\n      <header className=\"Editor-header\">\r\n        Edit Contract Text\r\n      </header>\r\n      <Editor \r\n        editorState={editorState}\r\n        onEditorStateChange={handleEditorChange}\r\n        wrapperClassName=\"wrapper-class\"\r\n        editorClassName=\"editor-class\"\r\n        toolbarClassName=\"toolbar-class\"\r\n      />\r\n    </div>\r\n  )\r\n})\r\nexport default TextEditor;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Button from \"../Elements/Button\";\r\nimport TextEditor from \"../Elements/TextEditor\";\r\nimport {serverURL} from \"../../config\";\r\nconst { useRef} = React;\r\n\r\nconst fetchFunc = async ({subRoute, sendData}) => {\r\n    return await fetch(`${serverURL}/${subRoute}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(sendData)\r\n      })\r\n        .then(data => data.json())\r\n}\r\n\r\nconst CreateDraft= ({user, company, addContract, toggle}) => {\r\n    const childRef = useRef();\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [members, setMembers] = useState([]);\r\n    const [contractName, setContractName] = useState('');\r\n    const [selectedMembers, setSelectedMembers] = useState([])\r\n\r\n    useEffect(()=> {    \r\n        const fetchMembers = async () => { \r\n            let candidates = await fetchFunc({subRoute: \"findCompanyMembers\", sendData: {company}});   \r\n            console.log(\"candidates\", candidates);\r\n            if(candidates){\r\n                setMembers(candidates);\r\n            }\r\n        }\r\n        fetchMembers();\r\n        // eslint-disable-next-line\r\n     }, []);\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        if(members.length ===0){\r\n            setErrorMessage(\"There are no candidates from your company\");\r\n            return\r\n        }\r\n        if(selectedMembers.length === 0 || contractName===\"\"){\r\n            setErrorMessage(\"Please fill out all fields\");\r\n            return\r\n        }else{\r\n            if(errorMessage)\r\n            {   setErrorMessage(null)\r\n            }    \r\n            let draftContent = await childRef.current.convertContentToHTML();\r\n            let res = await fetchFunc({subRoute: \"createDraft\", sendData: {user, company, contractName, selectedMembers, draftContent}})\r\n            console.log(res);\r\n            if(res.success){\r\n                setSelectedMembers([])\r\n                setContractName('')\r\n                toggle(false)\r\n                addContract(res.newContracts);\r\n            }else{\r\n                setErrorMessage(res.msg)\r\n            }            \r\n        }\r\n    }\r\n\r\n    const cancelHandler = (e) => {\r\n        e.preventDefault();\r\n        if(errorMessage)\r\n        {   setErrorMessage(null)\r\n        } \r\n        setSelectedMembers([])\r\n        setContractName('')\r\n        toggle(false)\r\n    }\r\n\r\n    const updateSelectedMembers = (memberName, isSelected) => {\r\n        isSelected? setSelectedMembers([...selectedMembers, memberName])\r\n        :\r\n        setSelectedMembers(selectedMembers.filter( mem => mem !== memberName)) \r\n    }\r\n\r\n    return(\r\n        <>\r\n        <br/>\r\n        { errorMessage && <h4 className=\"error\"> { errorMessage } </h4> }\r\n        <br/>\r\n        <div className=\"create-draft-form\">\r\n        <form onSubmit={(e) => submitHandler(e)}>\r\n            <label>Select the members of your company for this contract</label>\r\n            <div className='form-control'>\r\n            { \r\n              members.map((member, idx) => (\r\n                    <React.Fragment key={idx}>\r\n                        <input type=\"checkbox\" name={`member${idx}`} value={member} onChange={(e) => {updateSelectedMembers(e.currentTarget.value, e.currentTarget.checked);if(errorMessage)\r\n        {   setErrorMessage(null)\r\n        } ;}} />\r\n                        <label htmlFor={idx}>{member}</label>\r\n                        <br/>   \r\n                    </React.Fragment>\r\n                    ))\r\n            }\r\n            </div> \r\n            <br/>\r\n            <div className='form-control'>\r\n            <label>Name of Contract</label>\r\n            <br/>\r\n            <input\r\n              type='text'\r\n              placeholder='Enter contract name'\r\n              value={contractName}\r\n              onChange={(e) => {setContractName(e.target.value);if(errorMessage)\r\n        {   setErrorMessage(null)\r\n        } }}\r\n            />\r\n            </div>\r\n            <br/>\r\n            <TextEditor ref={childRef}/>\r\n            <br/>\r\n            <div className=\"create-draft-buttons\">\r\n            <div>\r\n            <Button class=\"btn btn-primary\" btnType=\"submit\" text=\"Initiate Contract\"/>\r\n            <Button class=\"btn btn-danger\" onClick={(e) => {cancelHandler(e);if(errorMessage){ setErrorMessage(null)}}} text=\"Cancel\" color=\"red\" /> \r\n            </div>\r\n            </div>\r\n            </form>          \r\n        </div>\r\n        </>      \r\n    )\r\n}\r\nexport default CreateDraft;","import Button from \"../Elements/Button\";\r\nimport {useEffect, useState} from \"react\";\r\nimport ContractRow from \"../Contracts/ContractRow\";\r\nimport CreateDraft from \"./CreateDraft\";\r\nimport {serverURL} from \"../../config\";\r\n\r\n// Fetch Tasks\r\nconst fetchContracts = async (user, company, candidate) => {\r\n    return await fetch(`${serverURL}/contracts/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({user, company, candidate})\r\n      }).then((data)=> data.json())\r\n}\r\n\r\nconst Dashboard = () => {\r\n    const [contracts, setContracts] = useState([])\r\n    const [showCreateDraft, toggleShowCreateDraft] = useState(false);\r\n    const [rendered, setRendered] = useState(false);\r\n\r\n    let user, company;\r\n    user = localStorage.getItem('user')\r\n    company = localStorage.getItem('company')\r\n\r\n    useEffect(() => {\r\n        const getTasks = async () => {\r\n            let contractsFromServer = await fetchContracts(localStorage.getItem('user'), localStorage.getItem('company'), localStorage.getItem('candidate'))\r\n            setContracts(contractsFromServer)\r\n          }\r\n        if(rendered){ \r\n            getTasks()\r\n        }\r\n        if( ! rendered ) {  \r\n            setRendered(true);\r\n        }\r\n    },[rendered]);\r\n       \r\n    const handleCreateDraft = () => {\r\n        toggleShowCreateDraft(true)\r\n    }\r\n\r\n    //newContracts is an array of contract objects\r\n    const addContract = (newContracts) => {\r\n        console.log(\"contracts:\", contracts)\r\n        console.log(\"new contracts: \", newContracts)\r\n        if(contracts !== null) setContracts([...newContracts, ...contracts])\r\n        else setContracts([...newContracts])\r\n    }\r\n    \r\n    const deleteContract = (id) => {\r\n        console.log(\"id deletion called on\", id);\r\n        setContracts(contracts.filter((contract) => contract._id !== id))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n           {(localStorage.getItem('candidate')===\"false\") && <div>\r\n                <Button class=\"btn btn-primary btn-lg btn-block initiateDraftButton\" text=\"Initiate New Draft\" color=\"green\" onClick={handleCreateDraft} /> \r\n              {\r\n              showCreateDraft && <CreateDraft addContract={addContract} toggle={toggleShowCreateDraft} user={user} company={company} />\r\n              }\r\n            </div>\r\n           } \r\n            <hr/>\r\n            <div className=\"contracts-table\">\r\n                <table className=\"table table-striped\">\r\n                <thead className=\"thead-light\">\r\n                <tr>\r\n                    <th>Name <br/>(Click to View)</th>\r\n                    <th>Company</th>\r\n                    <th>Associated Candidate</th>\r\n                    <th>Status</th>\r\n                    <th>Actions Available</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {contracts.length > 0 ? (\r\n                    <ContractRow\r\n                    contracts={contracts}\r\n                    onDelete={deleteContract}\r\n                    />\r\n                ) : (\r\n                    'You have not created any contracts yet.'\r\n              )}\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Dashboard;","import { useState } from 'react';\r\n\r\nconst UserToken = () => {\r\n  const getToken = () => {\r\n    let token = localStorage.getItem('token');\r\n    if(token === \"false\"){\r\n      return null\r\n    }else{\r\n      return token\r\n    } \r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = ({token, user, candidate, company}) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', user);\r\n    localStorage.setItem('candidate', candidate);\r\n    localStorage.setItem('company',company);\r\n    setToken(token);\r\n  };\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token,\r\n  }\r\n}\r\n\r\nexport default UserToken","import React,{useEffect, useState} from 'react'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {serverURL} from \"../../config\";\r\n\r\nconst Viewer = () => {\r\n    let {candidate, contract} = useParams();\r\n    const [draftContent, setDraftContent] = useState(\"\");\r\n\r\n    const findContent = async () => {\r\n      let res = await fetch(`${serverURL}/finddraftcontent/`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({candidate, contract})\r\n          }).then((data)=> data.json())   \r\n      return res.content\r\n    }\r\n\r\n    setInterval(async () => {\r\n        let newDraft = await findContent(candidate, contract);\r\n        if(newDraft !== null){\r\n          if(newDraft.localeCompare(draftContent) !== 0){\r\n            setDraftContent(newDraft);\r\n          }\r\n        }\r\n      },4000)\r\n    \r\n    useEffect(() => {\r\n        const firstScript = document.createElement('script');\r\n        firstScript.src = \"https://documentcloud.adobe.com/view-sdk/main.js\";\r\n        firstScript.async = true;\r\n        firstScript.type=\"text/javascript\";\r\n        const secondScript = document.createElement('script');\r\n        secondScript.src = \"/adobeview.js\";\r\n        secondScript.async = true;\r\n        secondScript.type=\"text/javascript\";\r\n        document.body.appendChild(firstScript);\r\n        document.body.appendChild(secondScript);\r\n      return () => {\r\n          document.body.removeChild(firstScript);\r\n          document.body.removeChild(secondScript);\r\n        }\r\n      }, [draftContent]);\r\n    return (\r\n        <div id=\"pdfviewercontainer\" candidate={`${candidate}`} contract={`${contract}`}>\r\n            <div id=\"adobe-dc-view\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Viewer\r\n","import Button from \"../Elements/Button\"\r\nimport TextEditor from \"../Elements/TextEditor\";\r\nimport {useHistory, useParams, useLocation} from \"react-router-dom\";\r\nimport React,{useState} from \"react\";\r\nimport {serverURL} from \"../../config\";\r\nconst { useRef} = React;\r\n\r\nconst EditContract = (props) => {\r\n    const childRef = useRef();\r\n    const history = useHistory();\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    let creator = localStorage.getItem('user');\r\n    let company = localStorage.getItem('company');\r\n    let {candidate, contract} = useParams();\r\n    let {state} = useLocation();\r\n    let draftData = \"\" //in case of direct approach to url\r\n\r\n    const editSubmit = async() => {\r\n        setErrorMessage(null)\r\n        let draftContent = await childRef.current.convertContentToHTML();\r\n        const editStatus = await fetch(`${serverURL}/editcontract/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({creator, candidate, company, contract, draftContent})\r\n              }).then((data)=> data.json())\r\n        if(editStatus.success){\r\n            history.goBack();\r\n        }else{\r\n            setErrorMessage(editStatus.msg)\r\n        }      \r\n    }\r\n\r\n    const reorderDeleteSubmit = async (id) =>{\r\n        setErrorMessage(null);\r\n        let SP, EP;\r\n        if(id===0){\r\n            SP = document.getElementById(\"deleteSP\").value;\r\n            EP = document.getElementById(\"deleteEP\").value;\r\n        }else{\r\n            SP = await document.getElementById(\"reorderSP\").value;\r\n            EP = await document.getElementById(\"reorderEP\").value;\r\n        }\r\n        let editStatus = await fetch(`${serverURL}/editcontract/reorderDelete`, {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({candidate,contract, SP, EP, id})\r\n              }).then((data)=> data.json())\r\n        console.log(editStatus);\r\n        if(editStatus.success){\r\n            history.goBack();\r\n        }else{\r\n            setErrorMessage(editStatus.msg)\r\n        }      \r\n    }\r\n\r\n    const cancelHandler = () => {\r\n        setErrorMessage(null);\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <br/>\r\n        { errorMessage && <h4 className=\"error\"> { errorMessage } </h4> }\r\n        <br/>\r\n        <Button class=\"btn btn-danger\" text=\"Back to Dashboard\" onClick={cancelHandler} />\r\n        <br/>\r\n        <br/>\r\n        <div className=\"edit-contract form-control\">\r\n        <TextEditor initialText={state === undefined ? draftData :state.data} ref={childRef}/>\r\n            <div className=\"button-grp\">\r\n                <Button class=\"btn btn-success\" text=\"Save Changes\" onClick={editSubmit} />\r\n                <Button class=\"btn btn-danger\" text=\"Cancel\" onClick={cancelHandler} />\r\n            </div>\r\n        </div>\r\n            <div className=\"edit-contract-form\">\r\n                <div className='form-control'>\r\n                    <h4>Delete Pages</h4>\r\n                    <input\r\n                        type='number'\r\n                        id='deleteSP'\r\n                        min={1}\r\n                        max={10}\r\n                    />\r\n                    <label>Enter starting page</label>\r\n                    <br/>\r\n                    <input\r\n                        type='number'\r\n                        id='deleteEP'\r\n                        min={1}\r\n                        max={10}\r\n                    />\r\n                    <label>Enter ending page</label>\r\n                    <br/>\r\n                    <div className=\"button-grp\">\r\n                    <Button class=\"btn btn-success\" text=\"Delete Pages\" onClick={()=>reorderDeleteSubmit(0)} />\r\n                    <Button class=\"btn btn-danger\" text=\"Cancel\" onClick={cancelHandler} />\r\n                </div>\r\n                </div>\r\n                \r\n                <div>\r\n                <div className='form-control'>\r\n                    <h4>Reorder Pages</h4>\r\n                    <input\r\n                        type='number'\r\n                        id='reorderSP'\r\n                        min={1}\r\n                        max={10}\r\n                    />\r\n                    <label>Enter starting page</label>\r\n                    <br/>\r\n                    <input\r\n                        type='number'\r\n                        id='reorderEP'\r\n                        min={1}\r\n                        max={10}\r\n                    />\r\n                    <label>Enter ending page</label>\r\n                    <br/>\r\n                    <div className=\"button-grp\"> \r\n                    <Button class=\"btn btn-success\" text=\"Reorder Pages\" onClick={()=>reorderDeleteSubmit(1)} />\r\n                    <Button class=\"btn btn-danger\" text=\"Cancel\" onClick={cancelHandler} />  \r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditContract\r\n","import React,{useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport Button from \"../Elements/Button\";\r\nimport {serverURL} from \"../../config\";\r\n\r\nconst SignAuthorize = () => {\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    // eslint-disable-next-line\r\n    const [content, setContent] = useState(\"OAUTH IN PROGRESS...\");\r\n    const [showEmail, setShowEmail] = useState(true);\r\n    const [email, setEmail]= useState('');\r\n\r\n    let {contract, candidate, code, api_access_point, web_access_point} = useParams();    \r\n\r\n    const callFunc = () => {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(! re.test(String(email).toLowerCase())){\r\n            setErrorMessage(\"Please enter valid Email Id\");\r\n            return;\r\n        }\r\n        setErrorMessage(null);\r\n        setShowEmail(false);\r\n        fetch(`${serverURL}/signauth/redirect`, {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({contract, candidate, email, code, api_access_point, web_access_point})\r\n            }) \r\n    }\r\n    \r\n    return (\r\n        <div className=\"jumbotron\">\r\n        { errorMessage && <h4 className=\"error\"> { errorMessage } </h4> }\r\n            {showEmail && (\r\n                    <div>\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder='Enter Recipient Email'\r\n                        value={email}\r\n                        onChange={(e) => {setEmail(e.target.value);setErrorMessage(null);}}\r\n                     />\r\n                     <Button text=\"SUBMIT\" class=\"btn btn-success\" onClick={callFunc} />\r\n                    </div>\r\n                    )\r\n            }\r\n            <h3>{content}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignAuthorize\r\n","import { BrowserRouter as Router, Route, Redirect} from 'react-router-dom'\nimport './App.css';\nimport Header from \"./components/HeaderFooter/Header\";\nimport Footer from \"./components/HeaderFooter/Footer\";\nimport Register from \"./components/SignIn/Register\";\nimport Login from \"./components/SignIn/Login\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Dashboard from \"./components/Draft/Dashboard\";\nimport UserToken from \"./UserToken\";\nimport Viewer from './components/Viewer/Viewer';\nimport EditContract from './components/Viewer/EditContract';\nimport SignAuthorize from './components/Viewer/SignAuthorize';\n\nfunction App() {\n  const {token, setToken} = UserToken();\n  console.log(\"token is\", token);\n  return (\n    <Router>\n        <Route exact path=\"/\">\n            <Redirect to=\"/login\"></Redirect>\n        </Route>\n        <div className=\"App\">\n        <Header isAuth={token} setToken={setToken} />\n        <Route exact path=\"/login\">{token? <Redirect to=\"/dashboard\"></Redirect>: <Login setToken={setToken} />}</Route>\n        <Route exact path=\"/register\">{token? <Redirect to=\"/dashboard\"></Redirect> : <Register setToken={setToken} />}</Route>\n        <ProtectedRoute exact path=\"/dashboard\" Component={Dashboard} isAuth={token} />\n        <ProtectedRoute path=\"/viewcontract/:candidate/:contract\" Component={Viewer} isAuth={token} />\n        <ProtectedRoute path=\"/editcontract/:candidate/:contract\" Component={EditContract} isAuth={token} candidate={false} />\n        <ProtectedRoute path=\"/signcontract/:candidate/:contract\" Component={SignAuthorize} isAuth={token} />\n        <Footer />\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}